{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\jjong\\\\Desktop\\\\test-code\\\\front\\\\pages\\\\signup.js\",\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { GlobalStyles, Button, ActiveBtn } from '../component/GlobalStyles';\n\nvar Signup = function Signup() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    !chek ? setChekErr(true) : setChekErr(false);\n  };\n\n  var _useInput = useInput(),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      id = _useInput2[0],\n      setId = _useInput2[1];\n\n  var _useState = useState(),\n      name = _useState[0],\n      setName = _useState[1];\n\n  var _useState2 = useState(),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(false),\n      passwordCheck = _useState3[0],\n      setPasswordCheck = _useState3[1];\n\n  var _useState4 = useState(false),\n      chek = _useState4[0],\n      setChek = _useState4[1];\n\n  var _useState5 = useState(false),\n      passwordCheckErr = _useState5[0],\n      setPasswordCheckErr = _useState5[1];\n\n  var _useState6 = useState(false),\n      chekErr = _useState6[0],\n      setChekErr = _useState6[1];\n\n  var useInput = function useInput() {\n    _s();\n\n    var initalState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n    var _useState7 = useState(initalState),\n        state = _useState7[0],\n        setter = _useState7[1];\n\n    var handler = function handler(e) {\n      setter(e.target.value);\n    };\n\n    return [state, handler];\n  }; // const handleId = (e) => {\n  //     setId(e.target.value);\n  // }\n\n\n  _s(useInput, \"tCAtD5n1qKpIWce0bXEhmmhGxjI=\");\n\n  var handleName = function handleName(e) {\n    setName(e.target.value);\n  };\n\n  var handlePassword = function handlePassword(e) {\n    setPassword(e.target.value);\n  };\n\n  var handlePasswordCheck = function handlePasswordCheck(e) {\n    // setPasswordCheckErr(password !== e.target.value)\n    password !== e.target.value ? setPasswordCheckErr(true) : setPasswordCheckErr(false);\n    console.log(password !== e.target.value);\n    setPasswordCheck(e.target.value);\n  };\n\n  var handleCheckbox = function handleCheckbox(e) {\n    setChek(e.target.checked); // chek ? setChekErr(false) : null\n\n    setChekErr(false);\n    console.log(chek);\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(GlobalStyles, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, id, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"id\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, \"id\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 51\n    }\n  }), __jsx(\"input\", {\n    id: \"id\",\n    onChange: setId,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, \"name\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 55\n    }\n  }), __jsx(\"input\", {\n    id: \"name\",\n    onChange: handleName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"password\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 63\n    }\n  }), __jsx(\"input\", {\n    id: \"password\",\n    onChange: handlePassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"password-check\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, \"password-check\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 75\n    }\n  }), __jsx(\"input\", {\n    id: \"password-check\",\n    onChange: handlePasswordCheck,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }), passwordCheckErr && __jsx(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 43\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4\")), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, __jsx(\"input\", {\n    id: \"checkbox\",\n    type: \"checkbox\",\n    checked: chek,\n    onChange: handleCheckbox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"checkbox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, \"\\uC885\\uD658\\uC758 \\uB9D0\\uC744 \\uB4E4\\uC744\\uAC83\\uC744 \\uB9F9\\uC138\\uD569\\uB2C8\\uB2E4\"), chekErr && __jsx(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 34\n    }\n  }, \"\\uB0B4 \\uB9D0\\uC744 \\uC548\\uB4E3\\uACA0\\uB2E4\\uACE0 ?\")), __jsx(ActiveBtn, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, \"signup\")));\n};\n\n_s2(Signup, \"/uNUKlQAAtplxwIVYUTeOfJcx4I=\", true);\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["C:/Users/jjong/Desktop/test-code/front/pages/signup.js"],"names":["React","useState","useEffect","GlobalStyles","Button","ActiveBtn","Signup","handleSubmit","e","preventDefault","chek","setChekErr","useInput","id","setId","name","setName","password","setPassword","passwordCheck","setPasswordCheck","setChek","passwordCheckErr","setPasswordCheckErr","chekErr","initalState","state","setter","handler","target","value","handleName","handlePassword","handlePasswordCheck","console","log","handleCheckbox","checked","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { GlobalStyles, Button, ActiveBtn } from '../component/GlobalStyles'\r\n\r\nconst Signup = () => {\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        !chek ? setChekErr(true) : setChekErr(false) \r\n\r\n       \r\n    }\r\n\r\n    const [id, setId] = useInput();\r\n    const [name, setName] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [passwordCheck, setPasswordCheck] = useState(false);\r\n    const [chek, setChek] = useState(false);\r\n    const [passwordCheckErr, setPasswordCheckErr] = useState(false);\r\n    const [chekErr, setChekErr] = useState(false);\r\n\r\n\r\n    const useInput = (initalState = null) => {\r\n        const [state, setter] = useState(initalState);\r\n        const handler = (e) => {\r\n            setter(e.target.value)\r\n        }\r\n        return [state, handler]\r\n    }\r\n\r\n\r\n    \r\n    // const handleId = (e) => {\r\n    //     setId(e.target.value);\r\n    // }\r\n\r\n    const handleName = (e) => {\r\n        setName(e.target.value)\r\n    }\r\n\r\n    const handlePassword = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const handlePasswordCheck = (e) => {\r\n        // setPasswordCheckErr(password !== e.target.value)\r\n        password !== e.target.value ? setPasswordCheckErr(true) : setPasswordCheckErr(false)\r\n        console.log(password !== e.target.value)\r\n        setPasswordCheck(e.target.value)\r\n    \r\n    }\r\n\r\n    const handleCheckbox = (e) => {\r\n        setChek(e.target.checked)\r\n        // chek ? setChekErr(false) : null\r\n        setChekErr(false)\r\n        console.log(chek)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <GlobalStyles />\r\n            <form onSubmit={handleSubmit}>\r\n                {id}\r\n                <div>\r\n                    <label htmlFor=\"id\">id</label><br />\r\n                    <input id=\"id\" onChange={setId} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"name\">name</label><br />\r\n                    <input id=\"name\" onChange={handleName}/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"password\">password</label><br />\r\n                    <input id=\"password\" onChange={handlePassword}/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"password-check\">password-check</label><br />\r\n                    <input id=\"password-check\" onChange={handlePasswordCheck}/>\r\n                    { passwordCheckErr && <div style={{color: \"red\", }}>비밀번호가 일치하지 않습니다</div> }\r\n                </div>\r\n\r\n                <div>\r\n                    {/* checked 속성에 state값을 넣어야함. 그리고 함수에는 e.target.checked */}\r\n                    <input id=\"checkbox\" type=\"checkbox\" checked={chek} onChange={handleCheckbox}/>\r\n                    <label htmlFor=\"checkbox\">종환의 말을 들을것을 맹세합니다</label>\r\n                    { chekErr && <div style={{color: \"red\", }}>내 말을 안듣겠다고 ?</div> }\r\n                </div>\r\n                <ActiveBtn>signup</ActiveBtn>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Signup;"]},"metadata":{},"sourceType":"module"}